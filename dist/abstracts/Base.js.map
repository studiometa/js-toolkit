{"version":3,"sources":["../../src/abstracts/Base.js"],"names":["debug","instance","args","$options","window","console","log","apply","config","name","getRefs","element","elements","Array","from","querySelectorAll","length","reduce","$refs","$ref","refName","dataset","ref","replace","isArray","push","getChildren","components","Object","entries","acc","ComponentClass","prototype","selector","el","map","options","call","method","$isMounted","$emit","mountComponents","$children","values","forEach","$child","c","$mount","destroyComponents","$destroy","Base","Error","$id","$el","document","querySelector","$instance","JSON","parse","err","unbindMethods","$on","loadedHandler","event","addEventListener","removeEventListener","add","remove","requestAnimationFrame","EventManager"],"mappings":"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","sourcesContent":["import nanoid from 'nanoid';\nimport EventManager from './EventManager';\nimport { useScroll, useResize, useRaf, usePointer } from '../services';\nimport { hasMethod } from '../utils';\n\n/**\n * Verbose debug for the component.\n * @param  {...any} args The arguments passed to the method\n * @return {void}\n */\nfunction debug(instance, ...args) {\n  return instance.$options.debug\n    ? window.console.log.apply(window, [instance.config.name, ...args])\n    : () => {};\n}\n\n/**\n * Get all refs of a component.\n *\n * @param {HTMLElement}  element The component's root element\n * @param {String}       name    The component's name\n * @return {null|Object}         Returns `null` if no refs were found or an object of references\n */\nfunction getRefs(element, name) {\n  const elements = Array.from(element.querySelectorAll(`[data-ref^=\"${name}.\"]`));\n\n  if (elements.length === 0) {\n    return null;\n  }\n\n  return elements.reduce(($refs, $ref) => {\n    const refName = $ref.dataset.ref.replace(`${name}.`, '');\n    if ($refs[refName]) {\n      if (Array.isArray($refs[refName])) {\n        $refs[refName].push($ref);\n      } else {\n        $refs[refName] = [$refs[refName], $ref];\n      }\n    } else {\n      $refs[refName] = $ref;\n    }\n\n    return $refs;\n  }, {});\n}\n\n/**\n *\n * @param  {HTMLElement} element    The component's root element\n * @param  {Object}      components The children components' classes\n * @return {null|Object}            Returns `null` if no child components are defined or an object of all child component instances\n */\nfunction getChildren(element, components) {\n  if (!components) {\n    return null;\n  }\n\n  return Object.entries(components).reduce((acc, [name, ComponentClass]) => {\n    const { config } = ComponentClass.prototype || {};\n    const selector = config.el || `[data-component=\"${name}\"]`;\n    const elements = Array.from(element.querySelectorAll(selector));\n\n    if (elements.length === 0) {\n      return acc;\n    }\n\n    acc[name] = elements.map(el => {\n      const { options } = el.dataset;\n      return new ComponentClass(el, options);\n    });\n\n    return acc;\n  }, {});\n}\n\n/**\n * Call the given method while applying the given arguments.\n *\n * @param {String} method The method to call\n * @param {...any} args   The arguments to pass to the method\n */\nfunction call(instance, method, ...args) {\n  debug(instance, 'call', method, ...args);\n\n  // Prevent duplicate call of `mounted` and `destroyed`\n  // methods based on the component status\n  if (\n    (method === 'destroyed' && !instance.$isMounted) ||\n    (method === 'mounted' && instance.$isMounted)\n  ) {\n    debug(instance, 'not', method, 'because the method has already been triggered once.');\n    return instance;\n  }\n\n  instance.$emit(method, ...args);\n\n  // We always emit an event, but we do not call the method if it does not exist\n  if (!hasMethod(instance, method)) {\n    return instance;\n  }\n\n  instance[method].call(instance, ...args);\n  debug(instance, method, instance, ...args);\n\n  return instance;\n}\n\n/**\n * Tie the components' `mounted` method to the instance\n */\nfunction mountComponents(instance) {\n  if (!instance.$children) {\n    return;\n  }\n  debug(instance, 'mountComponents', instance.$children);\n\n  Object.values(instance.$children).forEach($child => {\n    if (Array.isArray($child)) {\n      $child.forEach(c => {\n        c.$mount();\n      });\n    } else {\n      $child.$mount();\n    }\n  });\n}\n\n/**\n * Tie the components' `destroyed` method to the instance.\n *\n * @param  {Base} instance The base instance.\n * @return {void}\n */\nfunction destroyComponents(instance) {\n  if (!instance.$children) {\n    return;\n  }\n  debug(instance, 'destroyComponents', instance.$children);\n\n  Object.values(instance.$children).forEach($child => {\n    if (Array.isArray($child)) {\n      $child.forEach(c => {\n        c.$destroy();\n      });\n    } else {\n      $child.$destroy();\n    }\n  });\n}\n\n/**\n * Page lifecycle class\n *\n * @method mounted   Fired when the class is instantiated\n * @method loaded    Fired on the window's load event\n * @method ticked    Fired each frame with `requestAnimationFrame`\n * @method resized   Fired when the window is resized (`resize` event)\n * @method moved     Fired when the pointer has moved (`touchmove` and `mousemove` events)\n * @method scrolled  Fired with debounce when the document is scrolled (`scroll` event)\n * @method destroyed Fired when the window is being unloaded (`unload` event)\n */\nexport default class Base extends EventManager {\n  /**\n   * Class constructor where all the magic takes place\n   * @param  {Object}    options An option object\n   * @return {Base}         The mounted instance\n   */\n  constructor(element) {\n    super();\n\n    if (!this.config) {\n      throw new Error('The `config` getter must be defined.');\n    }\n\n    if (!this.config.name) {\n      throw new Error('The `config.name` property is required.');\n    }\n\n    this.$isMounted = false;\n    this.$id = `${this.config.name}-${nanoid()}`;\n    this.$el = element || document.querySelector(this.config.el);\n\n    if (!this.$el) {\n      throw new Error('Unable to find the root element.');\n    }\n\n    this.$el.$instance = this;\n\n    let options = {};\n    if (this.$el.dataset.options) {\n      try {\n        options = JSON.parse(this.$el.dataset.options);\n      } catch (err) {\n        throw new Error('Can not parse the `data-options` attribute. Is it a valid JSON string?');\n      }\n    }\n\n    this.$options = { ...this.config, ...(options || {}) };\n\n    debug(this, 'constructor', this);\n\n    const $refs = getRefs(this.$el, this.config.name);\n    if ($refs) {\n      this.$refs = $refs;\n    }\n\n    const $children = getChildren(this.$el, this.config.components);\n    if ($children) {\n      this.$children = $children;\n    }\n\n    let unbindMethods = [];\n\n    // Bind all the methods when the component is mounted,\n    // we save the unbind methods to unbind them all when\n    // the component is destroyed.\n    this.$on('mounted', () => {\n      unbindMethods = [];\n      // Fire the `loaded` method on window load\n      if (hasMethod(this, 'loaded')) {\n        const loadedHandler = event => {\n          call(this, 'loaded', { event });\n        };\n        window.addEventListener('load', loadedHandler);\n        unbindMethods.push(() => {\n          window.removeEventListener('load', loadedHandler);\n        });\n      }\n\n      // Fire the `scrolled` method on window/document scroll\n      if (hasMethod(this, 'scrolled')) {\n        const { add, remove } = useScroll();\n        add(this.$id, (...args) => {\n          call(this, 'scrolled', ...args);\n        });\n        unbindMethods.push(() => remove(this.$id));\n      }\n\n      // Fire the `resized` method on window resize\n      if (hasMethod(this, 'resized')) {\n        const { add, remove } = useResize();\n        add(this.$id, (...args) => {\n          call(this, 'resized', ...args);\n        });\n        unbindMethods.push(() => remove(this.$id));\n      }\n\n      // Fire the `ticked` method on each frame\n      if (hasMethod(this, 'ticked')) {\n        const { add, remove } = useRaf();\n        add(this.$id, (...args) => {\n          call(this, 'ticked', ...args);\n        });\n        unbindMethods.push(() => remove(this.$id));\n      }\n\n      // Fire the `ticked` method on each frame\n      if (hasMethod(this, 'moved')) {\n        const { add, remove } = usePointer();\n        add(this.$id, (...args) => {\n          call(this, 'moved', ...args);\n        });\n        unbindMethods.push(() => remove(this.$id));\n      }\n      mountComponents(this);\n      this.$isMounted = true;\n    });\n\n    this.$on('destroyed', () => {\n      this.$isMounted = false;\n      unbindMethods.forEach(method => method());\n      destroyComponents(this);\n    });\n\n    // Fire the `mounted` method on the next frame so the class\n    // properties are correctly loaded\n    requestAnimationFrame(() => {\n      this.$mount();\n    });\n\n    return this;\n  }\n\n  /**\n   * Small helper to log stuff.\n   *\n   * @param  {...any} args The arguments passed to the method\n   * @return {void}\n   */\n  $log(...args) {\n    return this.$options.log\n      ? window.console.log.apply(window, [this.config.name, ...args])\n      : () => {};\n  }\n\n  /**\n   * Trigger the `mounted` callback.\n   */\n  $mount() {\n    debug(this, '$mount');\n    call(this, 'mounted');\n    return this;\n  }\n\n  /**\n   * Trigger the `destroyed` callback.\n   */\n  $destroy() {\n    debug(this, '$destroy');\n    call(this, 'destroyed');\n    return this;\n  }\n}\n"],"file":"Base.js"}